(ns notes.n021-Natural-Transformations
  (:require
   [notes.collapsible :refer [e] :as collapse]
   [clojure.string :refer [join]]
   ))

;; [e ""]
(def ui
  [collapse/ui
   {:id "id021-NATs"
    :title "*** Natural Transformation: a way of/for comparing functors"
    :content
    [:div
     [:div "   - maps Morphism(s) to commuting diagram(s) (naturality squares). i.e."]
     [:div "     comorphism: replacing a square of (complex) relations with a single morphism"]
     [:div "   - picks a morphish between two Objs; Picking 1 morphishm from a homset"]
     [:div "   - Components of NaT"]
     [:div "   - Composing Ftor acting on an Obj with a Ftor acting on a Morphishm: " [e "αb ◦ Ff"]]
     [:div " "]
     [:div "   - Every polymorphic Fn is a NaT: it is defined for every single type"]
     [:div "     i.e. multiplication (Product) of all Objs in a Category. The same goes for"]
     [:div "     the dual - the Sum."]
     [:div "   - Functor is a container, NaT repackages the container"]
     [:div " "]
     [:div "**** Compositons of Natural Transformations"]
     [:div "   See https://math.vanderbilt.edu/dept/conf/tacl2013/coursematerials/SelingerTACL20132.pdf"]
     [:div "   E.g. NaT compositons is scala: https://gist.github.com/Mzk-Levi/752d1e0f2f7f30cd3bda"]
     [:div "   Legend:"]
     [:div "       " [e "A"] " - an Obj in the Category C"]
     [:div "       " [e "(...)A"] " / " [e "[...]A"] " - an A-component of the NaT (...) / [...]"]
     [:div "       " [e "αA"] " / " [e "βA"] " - an A-component of the NaT α / β"]
     [:div "       " [e "αFA"] " - an FA-component of the NaT α"]
     [:div "       " [e "βGA"] " / " [e "βFA"] " - GA/FA-component of the NaT β"]
     [:div " "]
     [:div "***** Verical Compositon of NaTs:"]
     [:div "     If " [e "α:F → G"] " and " [e "β:G → H"] " are natural transformations, then so is " [e "β • α : F → H"] "."]
     [:div "     Is it defined by:"]
     [:div "         " [e "(β • α)A = βA ◦ αA : FA → HA"]]
     [:div "     A - an Obj in the Category C"]
     [:div "     (...)A - an A-component of the NaT (...)"]
     [:div " "]
     [:div "     - is associative and has an id, and allows one to consider the collection"]
     [:div "       of all functors C → D itself as a category."]
     [:div " "]
     [:div "***** Right Whiskering"]
     [:div "     If F, G : C → D and H : D → E are Ftors, and if α : F → G is a NaT, the right whiskering"]
     [:div "         " [e "H ◦ α : H ◦ F → H ◦ G"]]
     [:div "     is defined as " [e "(H ◦ α)A : H(FA) → H(GA)"] " by " [e "(H ◦ α)A = H(αA)"]]
     [:div " "]
     [:div "***** Left Whiskering"]
     [:div "     If F : C → D and G, H : D → E are Ftors, and if α : G → H is a NaT, the left whiskering"]
     [:div "         " [e "α ◦ F : G ◦ F → H ◦ F"]]
     [:div "     is defined as " [e "(α ◦ F)A : G(FA) → H(FA)"] " by " [e "(α ◦ F)A = αFA"]]
     [:div " "]
     [:div "***** Horizontal Compositon of NaTs:"]
     [:div "     If F, G : C → D and H, K : D → E are Ftors, and if α : F → G and β : H → K"]
     [:div "     are NaTs, the horizontal composition:"]
     [:div "         " [e "β ◦ α : H ◦ F → K ◦ G"]]
     [:div "     can be defined in two different ways:"]
     [:div "     - Right whiskering followed by left whiskering:"]
     [:div "         " [e "β ◦ α = (β ◦ G) • (H ◦ α)"]]
     [:div "     - Left whiskering followed by right whiskering:"]
     [:div "         " [e "β ◦ α = (K ◦ α) • (β ◦ F)"]]
     [:div " "]
     [:div "     The two definitions coincide, because"]
     [:div "         " [e "[(β ◦ G) • (H ◦ α)]A = βGA ◦ H(α A)"] ", and"]
     [:div "         " [e "[(K ◦ α) • (β ◦ F)]A = K(α A) ◦ βFA"]]
     [:div " "]
     [:div "     - is associative with an id, and the id coincides with that for vertical"]
     [:div "       composition."]
     [:div " "]
     [:div " "]
     [:div "*** Yoneda Lemma: [C,Set](C(a,-), F) ⋍ F a   also: [C,Set](C(a,-), C(b,-)) ⋍ C(b,a)"]
     [:div "    - Intuition: NaT and Functor (i.e. Container) can replace each other"]
     [:div "    - Description of integration over a special Ftor (i.e. Hom Functor)"]
     [:div " "]
     [:div "    a - some arbitrary Obj of C"]
     [:div "    F - some arbitrary Ftor acting on the Obj a"]
     [:div "    ⋍ - \"naturally isomorphic\" (i.e. a NaT exists such that its components are"]
     [:div "        all invertible isomorphisms)"]
     [:div " "]
     [:div "    Hom functors - Intuition:"]
     [:div "    - Play some special role in the Category of Ftors"]
     [:div "    - Serve for the same purposes as Free Monoids"]
     [:div " "]
     [:div "    It's enough to define this NaT on one Obj (i.e. set C(a,a)) and moreover"]
     [:div "    it's enough to define it on one Point in this Set i.e. the Identity on Obj a."]
     [:div "    The rest of the NaT is transported from this Point."]
     [:div " "]
     [:div "    (                     ) ⋍ F a"]
     [:div "              ⎜                ⎜"]
     [:div "              ⎜                +-- Container of the Obj a (i.e. the data structure)"]
     [:div "              +------------------- Polymorphic higher order Function"]
     [:div " "]
     [:div "    (∀ x : (a → x) → F x) ⋍ F a"]
     [:div "              ⎜     ⎜   ⎜      ⎜"]
     [:div "              ⎜     ⎜   ⎜      +-- Container of the Obj a (i.e data structure)"]
     [:div "              ⎜     ⎜   +--------- Functor"]
     [:div "              ⎜     +------------- NaT i.e. Polymorphic Higher Order Function"]
     [:div "              +------------------- ..."]
     ]}])
