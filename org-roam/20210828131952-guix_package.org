:PROPERTIES:
:ID:       717e1406-3651-4136-97b0-7713388e644e
:END:
#+title: Guix Package

* Package Transformation Options
  [[https://guix.gnu.org/manual/en/html_node/Package-Transformation-Options.html][Package Transformation Options]]
  #+BEGIN_SRC bash :results output
  guix package --with-source=source
  guix package --with-source=package=source
  guix package --with-source=package@version=source
  guix package --with-input=package=replacement
  guix package --with-graft=package=replacement
  guix package --with-debug-info=package
  guix package --with-c-toolchain=package=toolchain
  guix package --with-git-url=package=url
  guix package --with-branch=package=branch
  guix package --with-commit=package=commit
  guix package --with-patch=package=file
  guix package --with-latest=package
  guix package --without-tests=package
  #+END_SRC

* Various commands
  --verbosity=LEVEL
  0 - no output
  1 - quiet
  2 - like 1 with download URLs
  3 - shows all the build log output on standard error

  #+BEGIN_SRC bash :results output
  guix package --list-available=ruby

  # list all installed packages
  guix package --list-installed

  # export the list installed packages
  guix package --export-manifest > manifest.scm
  # reproduce, i.e. reinstall packages
  guix package --manifest=manifest.scm

  guix package --list-generations
  guix package --switch-generation=PATTERN
  guix package --roll-back
  guix package --remove python --install guile
  guix package  -r      python  -i       guile
  guix install                           guile
  # install specific package version
  guix package                 --install bat@0.18.3

  guix package  -u
  guix package --upgrade
  guix           upgrade --dry-run
  guix           upgrade --do-not-upgrade="(openjdk|postgres|fish).*"
  # guix package -i mycli --with-latest=mycli
  #+END_SRC

  [[https://logs.guix.gnu.org/guix/2021-10-30.log#111758][IRC discussion: How to find out from which package a binary comes from?]]
  #+BEGIN_SRC bash :results output
  guix package --search=hello
  guix           search hello
  # package details
  guix package --show=hello
  guix           show hello
  guix weather   # see also availability of substitutes:
  guix archive   # export / import package(s) from / to the store
  #+END_SRC

  https://guix.gnu.org/manual/en/html_node/Invoking-guix-weather.html
  `guix weather` nars: size of the compressed archives

* Substitutes
  TODO what is 'substitutes' - update 'guix help wheather'
  Typically pre-built package binaries.
  Can be also e.g. source tarballs, which also result from derivation builds

* Creating package
  https://guix.gnu.org/cookbook/en/guix-cookbook.html#Packaging-Tutorial
  #+BEGIN_SRC bash :results output
    # download a file from the URI, add it to the store, and print both its file
    # name in the store and its SHA256 hash
    guix download URI

    # compute the hash of any (already downloaded) file
    guix hash file

    #
    guix build --load-path=./gnu/packages --keep-failed <package>
    cd $GUIX_CHECKOUT
    ./pre-inst-env guix build --keep-failed ruby@2.1

    # or
    guix package --install-from-file=my-hello.scm
  #+END_SRC
