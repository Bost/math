:PROPERTIES:
:ID:       78c3b40b-4600-4264-bb9a-810131987771
:END:
#+title: Guix

https://systemcrafters.cc/craft-your-system-with-guix/
https://www.cbaines.net/projects/guix/freenode-live-2017/presentation/#/

* Various commands
  #+BEGIN_SRC sh
  # systemctl status guix-daemon # on a foreign host

  guix describe # shows e.g.:
  # Generation 9	Oct 09 2021 10:21:38	(current)
  #   guix 2a273e9
  #     repository URL: https://git.savannah.gnu.org/git/guix.git
  #     branch: master
  #     commit: 2a273e9e2268c24b67620574fe34cc20bce7e5c8

  guix describe --list-formats
  guix describe vim --format=channels

  guix system describe

  # lists the currently defined services
  sudo herd status

  # `sudo guix system reconfigure configuration.scm` may produce:
  #   guix system: error: symlink: Permission denied: "/var/guix/profiles/system-2-link.new"
  # so try with sudo -E / --preserve-env
  sudo -E guix system reconfigure configuration.scm

  # find operating system declaration:
  find ~/.cache/guix/checkouts -name install.scm
  # instantiate operating system declaration:
  cd ~/.cache/guix/checkouts/<...>; guix system image -t iso9660 gnu/system/install.scm

  # Build an environment with PACKAGE-dependencies, and execute there the COMMAND
  COMMAND or an interactive shell in that environment
  guix environment [OPTION]... PACKAGE... [-- COMMAND...]
  #+END_SRC

* Upgrade GuixOS
  [[https://guix.gnu.org/manual/en/html_node/Upgrading-Guix.html][Upgrade Guix]]
** On foreign system (e.g. Ubuntu)
  #+BEGIN_SRC sh
  sudo --login guix pull
  systemctl restart guix-daemon.service
  #+END_SRC
** On Guix System
  #+BEGIN_SRC sh
  guix pull
  guix upgrade
  sudo guix system reconfigure # /run/current-system/configuration.scm
  # sudo herd restart guix-daemon # is probably not needed
  # see also
  sudo herd status guix-daemon
  #+END_SRC

[[id:e65e2b2a-062b-49f7-8017-68ec4ef20a5f][Remove Guix from Ubuntu]]
[[id:717e1406-3651-4136-97b0-7713388e644e][Guix Package Transformation Options]]
[[id:69f25a70-c039-488f-9382-91b998b7c0f5][Guix System Configuration]]

* Basic GuixOS system setup with manifest files
  [[https://guix.gnu.org/cookbook/en/html_node/Basic-setup-with-manifests.html][Basic setup with manifests]]
  #+BEGIN_SRC sh
  # see also guix package --export-manifest
  guix package --list-profiles
  GUIX_EXTRA_PROFILES=$HOME/.guix-extra-profiles
  mkdir -p "$GUIX_EXTRA_PROFILES"/my-project # if it does not exist yets
  guix package --manifest=$HOME/guix-my-project-manifest.scm \
               --profile="$GUIX_EXTRA_PROFILES"/my-project/my-project

  guix package -p "$GUIX_EXTRA_PROFILES"/my-project/my-project --list-installed
  #+END_SRC

  Add to ~/.bashrc (adding to ~/.bash_profile doesn't work):
  #+BEGIN_SRC sh
  GUIX_EXTRA_PROFILES=$HOME/.guix-extra-profiles
  for i in $GUIX_EXTRA_PROFILES/*; do
    profile=$i/$(basename "$i")
    if [ -f "$profile"/etc/profile ]; then
      GUIX_PROFILE="$profile"
      . "$GUIX_PROFILE"/etc/profile
    fi
    unset profile
  done
  #+END_SRC

* Guix in a VM: SSH access
  [[https://guix.gnu.org/manual/en/html_node/Running-Guix-in-a-VM.html][Guix in a VM: SSH access]]
  Edit the /run/current-system/configuration.scm
  #+BEGIN_SRC guile
  (service openssh-service-type
  (openssh-configuration
  (permit-root-login 'without-password)))
  #+END_SRC

  #+BEGIN_SRC sh
  guix system reconfigure /path/to/configuration.scm
  ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -p 10022 guest@localhost
  #+END_SRC

  #+BEGIN_SRC sh
  guix deploy /path/to/some/file.scm
  #+END_SRC

* Contributing & sending patches
  [[https://git.savannah.gnu.org/cgit/guix.git/tree/doc/guix.texi][Guix Documentation source code]]
  [[https://guix.gnu.org/manual/en/html_node/Submitting-Patches.html][Submitting Patches]]
  #+BEGIN_SRC sh
  info "(guix)Submitting Patches"
  #+END_SRC

* QEMU shrink disk size - doesn't work
  https://pve.proxmox.com/wiki/Shrink_Qcow2_Disk_Files
  #+BEGIN_SRC sh
  dd if=/dev/zero of=mytempfile
  # that could take a some time
  sync
  rm -f mytempfile

  cp guix-system-vm-image-1.3.0.x86_64-linux.qcow2 guix-system-vm-image-1.3.0.x86_64-linux.qcow2.backup
  qemu-img convert -O qcow2 guix-system-vm-image-1.3.0.x86_64-linux.qcow2.backup guix-system-vm-image-1.3.0.x86_64-linux.qcow2
  #+END_SRC

* Guile Script environment portability across Linux and Guix machines:
  <leoprikler>bost: nope, only reliable shebang still is #!/bin/sh
  [[https://logs.guix.gnu.org/guix/2021-08-22.log#115020][2021-08-22: IRC #guix channel log]]

* Org mode, Pdf, LaTex
  - `guix install texlive-bin` is not enough. It leads to: "I can't find the
    format file `pdflatex.fmt'!" where `sudo texconfig rehash` doesn't help (See
    [[http://tex.stackexchange.com/questions/64894/ddg#64895]])
  - Installing everything with `guix install texlive` (2.6 GB)
  - viewing pdf in the spacemacs:
  1. install pdf layer
  2. `guix install gwl` for the `autoreconf` program
  3. TODO fix `pdf-info-epdfinfo-program is not executable`

 M-x org-odt-export-to-odt needs
 guix install zip
 M-x org-roam-graph needs
 guix install graphviz
