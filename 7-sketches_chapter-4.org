#+LATEX: % generate pdf: M-x org-latex-export-to-pdf

#+LATEX_HEADER: \usepackage[margin=1in]{geometry}
#+LATEX_HEADER: \usepackage{float}      % fixed table position
#+LATEX_HEADER: \usepackage{parskip}    % paragraphs
#+LATEX_HEADER: \usepackage{hyperref}
#+LATEX_HEADER: \usepackage{syntax}     % grammar rules
#+LATEX_HEADER: \usepackage{cmll}       % logic symbols; sudo snap install texlive-fonts-extra; http://tug.ctan.org/info/symbols/comprehensive/symbols-a4.pdf
#+LATEX_HEADER: \usepackage{proof}      % inference rules
#+LATEX_HEADER: \hypersetup{colorlinks=true,urlcolor=blue}
#+LATEX_HEADER: \usepackage[utf8]{inputenc}   % unicode chars
#+LATEX_HEADER: \usepackage{minted}     % syntax coloring
#+LATEX_HEADER: \usepackage{mathrsfs}   % https://www.ctan.org/pkg/mathrsfs
#+LATEX_HEADER: \usepackage{oz}         % arrow with vertical stroke e.g. \pfun
#+LATEX_HEADER: \usepackage{mathtools}  % arrow with text
#+LATEX_HEADER: \newcommand{\catname}[1]{\mathbf{#1}}
#+LATEX: % https://en.wikipedia.org/wiki/List_of_mathematical_symbols_by_subject
#+STARTUP: latexpreview     % nolatexpreview / nolatexpreview C-c C-x C-l

* Generative Effects: Orders and Galois Connections
* Resource Theories: Monoid Preorders and Enrichment
** Symmetric Monoidal Preoder
   Preorder $(X, \leq)$: \\
   Set $X$ with a reflexive $x \leq x$ and transitive $x \leq y \land y \leq
   z \implies x \leq z$ preorder relation $\leq$. \\
   Partially ordered: \\
   preorder with skeletality requirement ($x \cong y \implies x = y$) where
   $x \leq y \land y \leq x \implies x \cong y$. \\
   Also: poset - partially ordered set

   Every preorder can be made into partial order by adding the skeletality
   requirement.

   Monoid $(M, *, e)$ - set $M$, multiplication $*: M \times M \fun M$,
   unit element $e$. \\
   Monoidal preorder: $x_1, y_1, x_2, y_2 \in X: x_1 \leq y_1 \land x_2 \leq y_2
   \implies x_1 \otimes x_2 \leq y_1 \otimes y_2$

   Symmetric: $x, y \in X: x \otimes y = y \otimes x$
*** TODO $\mathcal{V}$ Enrichment
* Databases: Categories, Functors and Universal Constructions
* Collaborative Design: Profunctors, Categorification, and Monoidal Categories
** \href{https://youtu.be/4Uqgsy3zrjs}{Chapter 4, lecture 1 (Spivak)}
   Reference to Andrea Censi; CoDesign = Collaborative design; Functionalities -
   resources provided vs. resources required

   Feed back loop - compact closure

   Pareto optimal front

   Preorder $(P, \leq)$ velocity $v$ and weight $w$ are preorders; $v \times w$
   is also a preorder;

   $v \times w$ is not a linear preorder anymore; certain thing are neither
   worse nor better than the other things

   antichain: subset $A$ of $P$: $A \subseteq P$ such that (s.th.) for all $a1,
   a2$ from A if $a1 \leq a2$ then $a1 = a2$. IOW no two different things are
   comparable.

   Categorical idea: $\mathcal{V}\text{-}profunctors$ = feasibility
   relationships especially if $\mathcal{V}$ is $Bool$.

   $\mathcal{V}\text{-}category$ is a diagram where by the elements of
   $\mathcal{V}$. $\mathcal{V}$ knows how to compose by what's called tensor.

   $\mathcal{V}\text{-}profunctor$ of $Bool$: "Can I get a motor that can
   provide this much torque and speed for this much weight, current and
   voltage?"

   $\mathcal{V}\text{-}profunctor$ of $Cost$: "How much would it cost to get a
   motor that can providing this much torque and speed for this much

   $\mathcal{V}\text{-}profunctor$ of $Set$. see
   \href{https://youtu.be/4Uqgsy3zrjs?t=491}{8:11} what are the ways to

   Idea: (wire diagrams ) \\
   $\mathcal{V}\text{-}category$: wires - each wire is carrying a preorder \\
   $\mathcal{V}\text{-}profunctor$: boxes \\
   $\mathcal{V}\text{-}profunctor\text{-}composition$: whole design problem;
   composition = feed-forward co-design. \\
   compact closed structure: add feedback

   $\mathcal{V}$ is $Bool$: \\
   $\mathcal{V}\text{-}category$ is a preorder: Less than or equal to is a
   true/false question.

   Opposite of a $\mathcal{V}\text{-}category$ $P$: \\
   A $\mathcal{V}\text{-}category$ w/ the same objects, arrows are reversed.
   I.e. if $p' \leq p$ in $P$ then $p \leq p'$ in $P\textsuperscript{op}$.

*** $\mathcal{V}\text{-}profunctor$: from one category to another
    We have $P \pfun Q$ \href{https://youtu.be/4Uqgsy3zrjs?t=861}{14:21} where
    $P$, $Q$ are wires, $\pfun$ is a box called \Phi "phi" as in "feasibility".

    $\mathcal{V}$ is a symmetric monoidal poset or a symmetric monoidal category:
    1. Notion of object: has a set of objects $Obj(P)$
    2. Notion of element: for all $p1, p2 \in Ob(P)$ we have $P(p1,p2) \in
       \mathcal{V}$

    Conditions for:
    1. monoidal unit $I \leq_\mathcal{V} P(p,p)$
    2. monoidal product $P(p1,p2) \otimes P(p2,p3) \leq_\mathcal{V} P(p1,p3)$

    $P = (\mathcal{V}, \otimes, I)$ is a $\mathcal{V}\text{-}category$ - it
    means it is enriched in itself. That also means it's a quantale, and that
    means it has all joins. $\mathcal{V}$ is also a symmetric monoidal preorder
    with joins that distribute over tensor. i.e. a quantale.
    \href{https://youtu.be/4Uqgsy3zrjs?t=2620}{43:40}
    #+LATEX: % TODO find quantale def \href{https://youtu.be/4Uqgsy3zrjs?t=1126}{18:46}
    #+LATEX: % TODO is the 43:40 a proper quantale definition?

    TODO following should be just $\fun$, not $\pfun$

    $\mathcal{V}\text{-}profunctor$: $P\textsuperscript{op} \times Q \pfun
    \mathcal{V}$ where $\mathcal{V} = \{true, false\}$ is a boolean.

    $\pfun$ is a profunctor, $\fun$ is a normal functor. IOW $\underscore
    \pfun \underscore$ packages up $\underscore \fun \underscore$

    _Unpacking $\Phi(p, q)$_: is $p$ feasible, given $q$? \\
    $p$ - resources provided \\
    $q$ - res/ources required

    _Meaning of opposite $\textsuperscript{op}$_: is there a path?"\\
    Can you give me a dinner for two $p$? - Yes that's feasible. Actually I need
    just a dinner for one $p'$: \\
    if $p' \leq p$ and $q' \leq q$ then $\Phi(p, q) \leq \Phi(p', q')$

    $Bool\text{-}profunctor$ drawn in a form of collage. Like a Hasse diagram
    for the whole profunctor.

    _Profunctor_: a generalisation of functor where not everything from the
    domain has to be included and two things may be spread out. See page
    7Sketches.pdf, page
    \href{http://math.mit.edu/~dspivak/teaching/sp18/7Sketches.pdf}{122}. Also:
    Every functor is a kind of profunctor.

    A functor between $Bool$ categories is a monotone map. So any monotone map
    is a profunctor. $\mathbb{N}$ are natural number with $\leq$ and $+$
    relations / operations. $\mathbb{N} \times \mathbb{N}
    \xrightarrow[]{\text{+}} \mathbb{N}$.

    Whenever some says a "functor", "category", "profunctor" w/o mentioning the
    $\mathcal{V}$ they always mean a $Set\text{-}category$ or a
    $Set\text{-}(pro)functor$ Note: Set is a monoidal category.

*** Profunctor composition
    Composing $\Phi$ with $\Psi$ and asking if it is feasible means that we can
    find some $q \in Q$, such that:
    $$(\Phi;\Psi)(p,r) = \bigvee_{q \in Q} \Phi(p,q) \wedge \Psi(q,r)$$
    where $\Phi$, $\Psi$ are boolean feasibilities and $\wedge$, $\bigvee$ are
    $AND$ and $OR$ in $Bool$.

    _Identity on $P$_:\\
    $$id_{P}: P\textsuperscript{op} \times P \rightarrow \mathcal{V}$$ where
    $\mathcal{V}$ is $Bool$ $$id_{P}(p,p'): = P(p,p')$$

    For any category that category is it's own profunctor.

    \href{https://censi.science/}{Andrea Censi} passes around the pareto optimal
    anti-chains

** \href{https://youtu.be/92Xp1z9PwJM}{Chapter 4, lecture 2 (Fong)}
   Collaborative design problem asks for:
   Given a set of specifications of teams what can the team as a whole produce?

   Hasse diagram intuitive but also formal at the same time. It also provide a
   particular algorithm how do we compute the entire capability of the team. How
   this team can collaborate to design some product.

** Symmetric Monoidal Categories SMC
   - Preorder $(P, \leq)$; e.g. $1 \leq 2$; $P$ is the wires, $\leq$ is the
     boxes/series
   - Monoid $(M, \textasteriskcentered, e)$ e.g. string of processes $(1 + 2) +
     3$; $M$ is the boxes, $\textasteriskcentered$ is series of composition.
   - Monoidal preorders - Set with $(P, \leq, \textasteriskcentered, e)$. We can
     put things in parallel (wires, boxes, parallel boxes)
   - Category: generalization of Monoid and Preorder $(Ob\mathscr{C},
     Mo\mathscr{C}, ;, id)$: (wires, boxes, series)
   - MP and C are special types of P and M \href{https://youtu.be/92Xp1z9PwJM?t=270}{4:30}
   - Monoidal Category: special type of MP and C $(\mathscr{C}, \otimes, I)$ -
     (-, parallel, -)

    #+LATEX: % TODO use $\catname{Set}$

    Axioms - ways to ensure that Hasse diagrams have unambiguous interpretation
    associativity.


    _Def: SCM_ $(\mathscr{C}, \otimes, I)$ is:
    - a category $\mathscr{C}$
    - a functor for monoidal product $\otimes: \mathscr{C} \times \mathscr{C}
      \rightarrow \mathscr{C}$
    - a functor $1 \rightarrow \mathscr{C}$ i.e. an object $I \in Ob\mathscr{C}$
    - Natural Isomorphism:
        * $\lambda_X : I \otimes X \rightarrow X$ i.e. left unitor
        * $\rho_X : X \otimes I \rightarrow X$ i.e. right unitor
    - Associativity: $\alpha_{X,Y,Z} : (X \otimes Y) \otimes Z \rightarrow X \otimes (Y \otimes
      Z)$
    SMC: $\delta_{X,Y}: X \otimes Y \rightarrow Y \otimes X$ i.e. swap map \\
    SMC is this data such that the natural isomorphisms are well behaved

    Tensor product $f \otimes g$ - parallel "execution" of $f$ and $g$

    SMC Examples: \\
    1. $(\catname{Set}, \times, 1)$:
    * Underlying category is the category of all sets: $\catname{Set}$ \\
    * monoidal product $\times$ is given by product of sets and also by product
      of functions. See \href{https://youtu.be/92Xp1z9PwJM?t=1658}{27:38}

    2. $(\catname{Set}, \amalg , \emptyset)$ where $\amalg$ is disjoint union of sets

    3. $(\catname{Vect_{k}}, \otimes, k)$: $k$ is a field; objects are vector
       spaces; monoidal product $\otimes$ i.e. monoidal structure comes from the
       tensor product of linear maps and vector spaces

    4. $(\catname{Prof}_{\mathcal{V}}, \times, 1)$: category of profunctors; objects are
       V-categories for some symmetric monoidal preorder; morphisms are the profunctors;
       monoidal product $\times$ is product of V-categories
