#+LATEX: % generate pdf: M-x org-latex-export-to-pdf

#+LATEX_HEADER: \usepackage[margin=1in]{geometry}
#+LATEX_HEADER: \usepackage{float}      % fixed table position
#+LATEX_HEADER: \usepackage{parskip}    % paragraphs
#+LATEX_HEADER: \usepackage{hyperref}
#+LATEX_HEADER: \usepackage{syntax}     % grammar rules
#+LATEX_HEADER: \usepackage{cmll}       % logic symbols; sudo snap install texlive-fonts-extra; http://tug.ctan.org/info/symbols/comprehensive/symbols-a4.pdf
#+LATEX_HEADER: \usepackage{proof}      % inference rules
#+LATEX_HEADER: \hypersetup{colorlinks=true,urlcolor=blue}
#+LATEX_HEADER: \usepackage[utf8]{inputenc}   % unicode chars
#+LATEX_HEADER: \usepackage{minted}     % syntax coloring
#+LATEX_HEADER: \usepackage{mathrsfs}   % https://www.ctan.org/pkg/mathrsfs
#+LATEX_HEADER: \usepackage{oz}         % arrow with vertical stroke e.g. \pfun
#+LATEX_HEADER: \usepackage{mathtools}  % arrow with text
#+LATEX_HEADER: \newcommand{\catname}[1]{{\normalfont\textbf{#1}}}
#+LATEX: % https://en.wikipedia.org/wiki/List_of_mathematical_symbols_by_subject
#+STARTUP: latexpreview     % nolatexpreview / nolatexpreview C-c C-x C-l

* Generative Effects: Orders and Galois Connections

\underline{Disjoint Union} of sets $\sqcup$ - see also
\href{https://en.wikipedia.org/wiki/Disjoint_union}{wikipedia}:\\
Set of ordered pairs $(x, i)$:\\
$$A = \bigsqcup_{i \in I} A_i = \bigcup_{i \in I}\{(x, i): x \in A_i}$$

$A_i$ is a family of sets indexed by the indexing set $I$. There are also
injective functions $A_i \rightarrow A; x \rightarrow (x, i)$. Example:\\

$A_0 = \{5, 6, 7\}$ indexed: $A^*_0 = \{(5, 0), (6, 0), (7, 0)\}$ \\
$A_1 = \{5, 6\}$ indexed: $A^*_1 = \{(5, 1), (6, 1)\}$ \\
$A = A_0 \sqcup A_1 = A^*_0 \union A*_1 = \{(5, 0), (6, 0), (7, 0), (5, 1), (6,
1)\}$

Every element of the result $A_0 \sqcup A_1$ has the information (the index $i$)
where it comes from. Elements which belong to multiple sets $A_i: i \in I$
appear separately in the result.

In Category Theory, disjoint union is the coproduct of the category of sets.

* Resource Theories: Monoid Preorders and Enrichment
** TODO $\mathcal{V}$ Enrichment
** Symmetric Monoidal Preoder

\underline{Preorder} $(X, \leq)$: Set $X$ with a reflexive $x \leq x$ and
transitive $x \leq y \land y \leq z \implies x \leq z$ preorder relation $\leq$.

\underline{Partially ordered}: preorder with skeletality requirement ($x \cong y
\implies x = y$; equivalence implies equality) where $x \leq y \land y \leq x
\implies x \cong y$.\\
Also: poset - partially ordered set. Every preorder can be made into partial
order by adding the skeletality requirement.

\underline{Monoid} $(X, \otimes, I)$: Set $X$, monoidal product (i.e.
multiplication) $\otimes: X \times X \fun X$, monoidal unit element $I \in X$.
Conditions:
- unitality: $\forall x \in X: I \otimes x = x \otimes I = x$
- associativity: $\forall x,y,z \in X: (x \otimes y) \otimes z = x \otimes (y
  \otimes z)$

\underline{Commutative Monoid} $(X, \otimes, I)$ Note: matrix multiplication is
not commutative.
- commutativity: $\forall x,y \in X: (x \otimes y) = y \otimes x$

\underline{Monoidal Preorder}: Condition:
- monotonicity: $x_1 \leq y_1 \land x_2 \leq y_2 \implies x_1 \otimes x_2 \leq
  y_1 \otimes y_2$

\underline{Symmetric}: condition:
- symmetry: $x \otimes y = y \otimes x$

\underline{Closed}: $\mathcal{V} = (V, \leq, I, \otimes)$ is symmetric monoidal
closed: $(a \otimes v) \leq w \iff a \leq (v \multimap w)$ where $(v \multimap
w)$ is the \emph{hom-element}.

** Quantales

\underline{Unital Commutative Quantale}: Symmetric Monoidal Closed Preorder
$\mathcal{V} = (V, \leq, I, \otimes, \multimap)$

* Databases: Categories, Functors and Universal Constructions

\underline{Free category} on a graph $G = (V,A,s,t)$: $\catname{Free}(G)$:\\
Generated by a graph with sets of Vertices and Arrows, source and target functions.
- objects are vertices $V$
- morphisms are paths from $c$ to $d$
- identity morphism on an object $c$ is a trivial path at $c$
- morphism composition - concatenation of paths

Morphisms of $\catname{Free}(G)$ are exactly the paths in $G$ and they form the
\textit{closure} of the set of Arrows $A$. $\catname{Free}(G)$ is a category
that in a sense contains $G$ and obeys no equations other than those that
categories are forced to obey.

* Collaborative Design: Profunctors, Categorification, and Monoidal Categories

\href{https://youtu.be/4Uqgsy3zrjs}{Chapter 4, lecture 1 (Spivak)},
\href{https://youtu.be/92Xp1z9PwJM}{Chapter 4, lecture 2 (Fong)}

Collaborative design problem asks for:
Given a set of specifications of teams what can the team as a whole produce?

Hasse diagram is intuitive but also formal at the same time. It also provide a
particular algorithm how do we compute the entire capability of the team. How
this team can collaborate to design some product.


Reference to Andrea Censi; CoDesign = Collaborative design; Functionalities -
resources provided vs. resources required

Feed back loop - compact closure

Pareto optimal front

Preorder $(P, \leq)$ velocity $v$ and weight $w$ are preorders; $v \times w$ is
also a preorder;

$v \times w$ is not a linear preorder anymore; certain thing are neither worse
nor better than the other things

antichain: subset $A$ of $P$: $A \subseteq P$ such that (s.th.) for all $a1, a2$
from A if $a1 \leq a2$ then $a1 = a2$. IOW no two different things are
comparable.

Categorical idea: $\mathcal{V}\text{-}profunctors$ = feasibility relationships
especially if $\mathcal{V}$ is $\catname{Bool}$.

$\mathcal{V}\text{-}category$ is a diagram where by the elements of
$\mathcal{V}$. $\mathcal{V}$ knows how to compose by what's called tensor.

$\mathcal{V}\text{-}profunctor$ of $\catname{Bool}$: "Can I get a motor that can
provide this much torque and speed for this much weight, current and voltage?"

$\mathcal{V}\text{-}profunctor$ of $\catname{Cost}$: "How much would it cost to
get a motor that can providing this much torque and speed for this much

$\mathcal{V}\text{-}profunctor$ of $\catname{Set}$. see
\href{https://youtu.be/4Uqgsy3zrjs?t=491}{8:11} what are the ways to

Idea: (wire diagrams ) \\
$\mathcal{V}\text{-}category$: wires - each wire is carrying a preorder \\
$\mathcal{V}\text{-}profunctor$: boxes \\
$\mathcal{V}\text{-}profunctor\text{-}composition$: whole design problem;
composition = feed-forward co-design. \\
compact closed structure: add feedback

$\mathcal{V}$ is $\catname{Bool}$: \\
$\mathcal{V}\text{-}category$ is a preorder: Less than or equal to is a
true/false question.

Opposite of a $\mathcal{V}\text{-}category$ $P$: \\
A $\mathcal{V}\text{-}category$ w/ the same objects, arrows are reversed.
I.e. if $p' \leq p$ in $P$ then $p \leq p'$ in $P\textsuperscript{op}$.

*** $\mathcal{V}\text{-}profunctor$: from one category to another

\href{https://youtu.be/4Uqgsy3zrjs?t=859}{14:19}
$\mathcal{V}\text{-}profunctor$: $P \pfun Q$ is A $\mathcal{V}\text{-}functor:
P\textsuperscript{op} \times Q \fun \mathcal{V}$ between
$\mathcal{V}\text{-}categories$ $P$ and $Q$. \\

In Hasse diagram $P$ and $Q$ are wires and $\pfun$ is a box \Phi
(phi-easibility).

$\mathcal{V}$ is a Symmetric Monoidal Poset (i.e. a Symmetric Monoidal Category
where the Category is a Poset) equipped with:
1. Notion of object: has a set of objects $Ob(P)$
2. Notion of element: for all $p1, p2 \in Ob(P)$ we have $P(p1,p2) \in
   \mathcal{V}$

Symmetric Monoidal Preorder (i.e. a Symmetric Monoidal Category where the
Category is a Preorder; Poset is a Preorder with skeletality requirement) i.e. a
Category where the morphism are "easy", i.e. between any two objects there
either is one or isn't one morphism. I.e. only one or none morphism.

Conditions for:
1. monoidal unit $I \leq_\mathcal{V} P(p,p)$
2. monoidal product $P(p1,p2) \otimes P(p2,p3) \leq_\mathcal{V} P(p1,p3)$

$P = (\mathcal{V}, \otimes, I)$ is a $\mathcal{V}\text{-}category$ - it means it
is enriched in itself. That also means it's a quantale, and that means it has
all joins. $\mathcal{V}$ is also a symmetric monoidal preorder with joins that
distribute over tensor. i.e. a quantale.
\href{https://youtu.be/4Uqgsy3zrjs?t=2620}{43:40}

#+LATEX: % TODO find quantale def \href{https://youtu.be/4Uqgsy3zrjs?t=1126}{18:46}
#+LATEX: % TODO is the 43:40 a proper quantale definition?

$\mathcal{V}\text{-}profunctor$: $P\textsuperscript{op} \times Q \fun
\mathcal{V}$ where $\mathcal{V} = \{true, false\}$ is a boolean.

$\pfun$ is a profunctor, $\fun$ is a normal functor. IOW $\underscore \pfun
\underscore$ packages up $\underscore \fun \underscore$

_Unpacking $\Phi(p, q)$_: is $p$ feasible, given $q$? \\
$p$ - resources provided \\
$q$ - res/ources required

_Meaning of opposite $\textsuperscript{op}$_: is there a path?"\\
Can you give me a dinner for two $p$? - Yes that's feasible. Actually I need
just a dinner for one $p'$: \\
if $p' \leq p$ and $q' \leq q$ then $\Phi(p, q) \leq \Phi(p', q')$

$\catname{Bool}\text{-}profunctor$ drawn in a form of collage. Like a Hasse diagram
for the whole profunctor.

_Profunctor_: a generalisation of functor where not everything from the domain
has to be included and two things may be spread out. See page 7Sketches.pdf,
page \href{http://math.mit.edu/~dspivak/teaching/sp18/7Sketches.pdf}{122}. Also:
Every functor is a kind of profunctor.

\underline{Monotone map}: order preserving function $f: x \leq y$ then $f(x) \leq
f(y)$

A functor between $\catname{Bool}$ categories is a monotone map. So any
monotone map is a profunctor. $\mathbb{N}$ are natural number with $\leq$ and
$+$ relations / operations. $\mathbb{N} \times \mathbb{N}
\xrightarrow[]{\text{+}} \mathbb{N}$.

Whenever some says a "functor", "category", "profunctor" w/o mentioning the
$\mathcal{V}$ they always mean a $\catname{Set}\text{-}category$ or a
$\catname{Set}\text{-}(pro)functor$ Note: \catname{Set} is a monoidal category.

*** Profunctor composition

Composing $\Phi$ with $\Psi$ and asking if it is feasible means that we can find
some $q \in Q$, such that:

$$(\Phi;\Psi)(p,r) = \bigvee_{q \in Q} \Phi(p,q) \wedge \Psi(q,r)$$

where $\Phi$, $\Psi$ are boolean feasibilities and $\wedge$, $\bigvee$ are $AND$
and $OR$ in \catname{Bool}.

_Identity on $P$_:\\
$$id_{P}: P\textsuperscript{op} \times P \rightarrow \mathcal{V}$$ where
$\mathcal{V}$ is $\catname{Bool}$ $$id_{P}(p,p'): = P(p,p')$$

For any category that category is it's own profunctor.

\href{https://censi.science/}{Andrea Censi} passes around the pareto optimal
anti-chains

** Symmetric Monoidal Categories SMC

- Preorder $(P, \leq)$; e.g. $1 \leq 2$; $P$ is the wires, $\leq$ is the
  boxes/series
- Monoid $(M, \textasteriskcentered, e)$ e.g. string of processes $(1 + 2) + 3$;
  $M$ is the boxes, $\textasteriskcentered$ is series of composition.
- Monoidal Preorder $(P, \leq, \textasteriskcentered, e)$ where $P$ is a set. We
  can put things in parallel (wires, boxes, parallel boxes)
- Category: generalization of Monoid and Preorder $(Ob(\mathscr{C}),
  Mo(\mathscr{C}), \fcmp, id)$: (wires, boxes, series)
- Monoidal Preorder and Category are special types of Preoder and Monoid
  \href{https://youtu.be/92Xp1z9PwJM?t=270}{4:30}
- Monoidal Category: special type of Monoidal Preoder and Category
  $(\mathscr{C}, \otimes, I)$ - (-, parallel, -)

 #+LATEX: % TODO use $\catname{Set}$

Axioms - ways to ensure that Hasse diagrams have unambiguous interpretation
associativity.

\underline{Symmetric Monoidal Category SMC} $(\mathscr{C}, \otimes, I)$ consists
of a:
- Category $\mathscr{C}$
- Functor for monoidal product $\otimes: \mathscr{C} \times \mathscr{C}
  \rightarrow \mathscr{C}$
- Functor I: $\catname{1} \rightarrow \mathscr{C}$ i.e. an object $I \in
  Ob(\mathscr{C})$
- Natural Isomorphism:
  * $\lambda_X : I \otimes X \rightarrow X$ i.e. left unitor
  * $\rho_X : X \otimes I \rightarrow X$ i.e. right unitor
- Associativity: $\alpha_{X,Y,Z} : (X \otimes Y) \otimes Z \rightarrow X
  \otimes (Y \otimes Z)$

SMC: $\delta_{X,Y}: X \otimes Y \rightarrow Y \otimes X$ i.e. swap map
(symmetricity) \\
SMC is this data such that the natural isomorphisms are well behaved

Tensor product $f \otimes g$ - parallel "execution" of $f$ and $g$

SMC Examples:
1. $(\catname{Set}, \times, \catname{1})$: underlying $\catname{Set}$ category
   is the category of all sets: objects are sets, morphisms are functions;
   monoidal product $\times$ is a product of sets and product of functions. See
   \href{https://youtu.be/92Xp1z9PwJM?t=1658}{27:38}

2. $(\catname{Set}, \sqcup, \emptyset)$: $\sqcup$ is the coproduct of disjoint
   unional sets.

3. $(\catname{Vect_{k}}, \otimes, k)$: $k$ is a field; objects are vector
   spaces; monoidal product $\otimes$ i.e. monoidal structure comes from the
   tensor product of linear maps and vector spaces

4. $(\catname{Prof}_{\mathcal{V}}, \times, \catname{1})$: category of
   profunctors; objects are $\mathcal{V}\text{-}categories$ for some symmetric
   monoidal preorder; morphisms are the profunctors; monoidal product $\times$
   is product of $\mathcal{V}\text{-}categories$.

** Categorification

Take a known thing and add structure to it. So that \underline{properties}
become \underline{structures}. See 7Sketches.pdf, page
\href{http://math.mit.edu/~dspivak/teaching/sp18/7Sketches.pdf}{133}. \\

$\catname{FinSet}$: Category of finite sets and functions. \\

Example - Categorify $\mathbb{N}$ using $\catname{FinSet}:$
- replace every number with a set of that many elements.
- replace $+$ with disjoint union of sets $\sqcup$.
- replace equality with the structure of an isomorphism.

* Signal Flow Graphs: Props, Presentations and Proofs

\href{https://youtu.be/33yVpzPOLjM}{Chapter 5, lecture 1 (Spivak)},
\href{https://youtu.be/0tnqd29TY9w}{Chapter 5, lecture 2 (Fong)}

Signal Flow Graphs - used in amplifiers filter, cyber-physical systems (tightly
interacting physical and computational parts)

I.e. It makes sense over any $\catname{Rig}$ which is basically a
$\catname{Ring}: R[s, s\textsuperscript{-1}]$

\underline{Prop} $(\mathscr{C}, \otimes, I)$: Special kind of a strict symmetric
monoidal category SMC where the objects are "easy" such that:
 - $Ob(\mathscr{C}) := \mathbb{N}$
 - $I := 0$
 - $\forall m,n \in Ob(\mathscr{C}) := \mathbb{N}: m \otimes n := m + n$
I.e. $Prop$ is a SMC where objects just have some finite cardinality. They're
just numbers (i.e. lines) \\
Symmetric: when equivalent then also equal: $1 + 2 \cong 3 \implies 1 + 2 = 3$

Example: \\
$Prop Mat_\mathbb{R}$ of matrices over a $\catname{Rig}$ $\mathbb{R}$; in this
case real numbers $\mathbb{R}$. A $\catname{Rig}$ is an algebraic object where
you can add and multiple things. I.e.
- $Ob(Mat_\mathbb{R}) := \mathbb{N}$
- $Mat_\mathbb{R}(m,n) := Mat_\mathbb{R}(m,n)$ - can't distinguish between the
  notations.
Compose an tensor of two matrices:

\underline{Presented Prop}

\underline{String Diagrams} (Syntax and Semantics, Soundness and Completeness)

\href{https://youtu.be/33yVpzPOLjM?t=433}{7:13} String diagrams are syntax for
something, Semantics is the math formula with integrals

Soundness: if you can prove that one diagram equals to another using String
diagram manipulations

\underline{Prop Functor} $F: \mathscr{C} \rightarrow \mathscr{D}$: \\
A functor between $Props$, i.e. categories with the set natural numbers
$\mathbb{N}$ as their objects. It is an identity-on-objects.  \\
It preserves composition as a functor should and also it preserves the tensor
product

\underline{Prop Signature} $\Sigma$
Set $G$ with ...

\underline{Port Graph}

\underline{Free structure}: free from unnecessary constraints. See
$\catname{Free}(G)$

Notion of adjuction ...

??? Underlying set of Monoid

strict Symmetric Monoidal Category SMC:
- strict - unitors, associators are identities; i.e strict means that the objects
  form a proper monoid

props are categories$!

\underline{Transitive closure} $R^+$ of a binary relation $R$: \\
Example: $R = \{(1,2),(2,3)\}$ then $R^+ = \{(1,2),(2,3),(1,3)\}$ i.e. extend
the $R$ by every possible composition.

\underline{Prop Signature} $\Sigma$
Set $G$ of things and two functions $s$, $t$ to natural numbers $\mathbb{N}$.

TODO Full Functor from C to D

TODO Matrix Kernel
