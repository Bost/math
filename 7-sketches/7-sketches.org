# generate pdf: M-x org-latex-export-to-pdf

#+LATEX_HEADER: \usepackage{cat-7-sketches}
# #+LATEX_HEADER: \usepackage{foo}

# https://en.wikipedia.org/wiki/List_of_mathematical_symbols_by_subject
# latexpreview / nolatexpreview C-c C-x C-l
# #+STARTUP: nolatexpreview
#+STARTUP: showeverything inlineimages nolatexpreview

* Generative Effects: Orders and Galois Connections

_Disjoint Union_ of sets $\sqcup$ - see also
\href{https://en.wikipedia.org/wiki/Disjoint_union}{wikipedia}:\\
Set of ordered pairs $(x, i)$:
$$A = \bigsqcup_{i \in I} A_i = \bigcup_{i \in I}{(x, i): x \in A_i}$$

$A_i$ is a family of sets indexed by the indexing set $I$. There are also
injective functions $A_i \to A; x \to (x, i)$. Example:

$A_0 = \{5, 6, 7\}$ indexed: $A^*_0 = \{(5, 0), (6, 0), (7, 0)\}$ \\
$A_1 = \{5, 6\}$ indexed: $A^*_1 = \{(5, 1), (6, 1)\}$ \\
$A = A_0 \sqcup A_1 = A^*_0 \cup A^*_1 = \{(5, 0), (6, 0), (7, 0), (5, 1), (6,
1)\}$

Every element of the result $A_0 \sqcup A_1$ has the information (the index $i$)
where it comes from. Elements which belong to multiple sets $A_i: i \in I$
appear separately in the result.

In Category Theory, disjoint union is the coproduct of the category of sets.

* Resource Theories: Monoid Preorders and Enrichment
** TODO V-enrichment
** Symmetric Monoidal Preoder

_Preorder_ $(X, \leq)$: Set $X$ with a reflexive $x \leq x$ and
transitive $x \leq y \land y \leq z \implies x \leq z$ preorder relation $\leq$.

\bigskip

_Partially ordered_: preorder with skeletality requirement ($x \cong y
\implies x = y$; equivalence implies equality) where $x \leq y \land y \leq x
\implies x \cong y$.\\
Also: poset - partially ordered set. Every preorder can be made into partial
order by adding the skeletality requirement.

\bigskip

_Monoid_ $(X, \otimes, I)$: Set $X$, monoidal product (i.e.
multiplication) $\otimes: X \times X \to X$, monoidal unit element $I \in X$.
Conditions:
- unitality: $\forall x \in X: I \otimes x = x \otimes I = x$
- associativity: $\forall x,y,z \in X: (x \otimes y) \otimes z = x \otimes (y
  \otimes z)$

\bigskip

_Commutative Monoid_ $(X, \otimes, I)$ Note: matrix multiplication is
not commutative.
- commutativity: $\forall x,y \in X: (x \otimes y) = y \otimes x$

\bigskip

_Monoidal Preorder_: Condition:
- monotonicity: $x_1 \leq y_1 \land x_2 \leq y_2 \implies x_1 \otimes x_2 \leq
  y_1 \otimes y_2$

\bigskip

_Symmetric_: condition:
- symmetry: $x \otimes y = y \otimes x$

\bigskip

_Closed_: $\cat{V} = (V, \leq, I, \otimes)$ is symmetric monoidal
closed: $(a \otimes v) \leq w \iff a \leq (v \multimap w)$ where $(v \multimap
w)$ is the \emph{hom-element}.

** Quantales

_Unital Commutative Quantale_: Symmetric Monoidal Closed Preorder
$\cat{V} = (V, \leq, I, \otimes, \multimap)$

* Databases: Categories, Functors and Universal Constructions

_Free category_ on a graph $G = (V,A,s,t)$: $\Cat{Free}(G)$: \\
Generated by a graph with sets of Vertices and Arrows, source and target
functions.
- objects are vertices $V$
- morphisms are paths from $c$ to $d$
- identity morphism on an object $c$ is a trivial path at $c$
- morphism composition - concatenation of paths

\bigskip

Morphisms of $\Cat{Free}(G)$ are exactly the paths in $G$ and they form the
\textit{closure} of the set of Arrows $A$. $\Cat{Free}(G)$ is a category that in
a sense contains $G$ and obeys no equations other than those that categories are
forced to obey.

\bigskip

See also the \href{https://youtu.be/UerS3uXNAng}{Arrow Theoretic} definition of
a Category which is equivalent with the usual Object/Morphism theory of
Categories.

\bigskip

Map Theory of Categories

* Collaborative Design: Profunctors, Categorification, and Monoidal Categories

\href{https://youtu.be/4Uqgsy3zrjs}{Chapter 4, lecture 1 (Spivak)},
\href{https://youtu.be/92Xp1z9PwJM}{Chapter 4, lecture 2 (Fong)}

\bigskip

Collaborative design problem asks for: \\
Given a set of specifications of teams what can the team as a whole produce?

\bigskip

Hasse diagram is intuitive but also formal at the same time. It also provide a
particular algorithm how do we compute the entire capability of the team. How
this team can collaborate to design some product.

\bigskip

Reference to Andrea Censi; CoDesign = Collaborative design; Functionalities -
resources provided vs. resources required

\bigskip

Feed back loop - compact closure

\bigskip

Pareto optimal front

\bigskip

Preorder $(P, \leq)$ velocity $v$ and weight $w$ are preorders; $v \times w$ is
also a preorder;

\bigskip

$v \times w$ is not a linear preorder anymore; certain thing are neither worse
nor better than the other things

\bigskip

_antichain_: subset $A$ of $P$: $A \subseteq P$ such that (s.th.) $\forall a_1,
a_2 \in A : a_1 \leq a_2 \implies a_1 = a_2$. IOW no two different things are
comparable.

\bigskip

Categorical idea: $\cat{V}$ -profunctors = feasibility relationships
especially if $\cat{V}$ is $\Bool$.

\bigskip

$\cat{V}$ -category is a diagram where by the elements of
$\cat{V}$. $\cat{V}$ knows how to compose by what's called tensor.

\bigskip

$\cat{V}$ -profunctor of $\Bool$: "Can I get a motor that can
provide this much torque and speed for this much weight, current and voltage?"

\bigskip

$\cat{V}$ -profunctor of $\Cost$: "How much would it cost to
get a motor that can providing this much torque and speed for this much

\bigskip

$\cat{V}$ -profunctor of $\SmSet$. see
\href{https://youtu.be/4Uqgsy3zrjs?t=491}{8:11} what are the ways to

\bigskip

Idea: (wire diagrams) \\
$\cat{V}$ -category: wires - each wire is carrying a preorder \\
$\cat{V}$ -profunctor: boxes \\
$\cat{V}$ -profunctor-composition: whole design problem; \\
composition = feed-forward co-design \\
compact closed structure: add feedback

\bigskip

$\cat{V}$ is $\Bool$: \\
$\cat{V}$ -category is a preorder: $\leq$ - /less than or equal to?/ is a
true/false question.

\bigskip

Opposite of a $\cat{V}$ -category $P$: \\
A $\cat{V}$ -category w/ the same objects, arrows are reversed.
I.e. if $p' \leq p$ in $P \implies p \leq p'$ in $P\textsuperscript{op}$.

** V-profunctor: from one category to another

\href{https://youtu.be/4Uqgsy3zrjs?t=859}{14:19} \\
$\cat{V}$ -profunctor: $P \tickar Q$ is a $\cat{V}$ -functor:
$P\op \times Q \to \cat{V}$ between $\cat{V}$ -categories $P$ and $Q$.

\bigskip

In Hasse diagram $P$ and $Q$ are wires and $\tickar$ is a box \Phi
(phi-easibility).

\bigskip

$\cat{V}$ is a Symmetric Monoidal Poset (i.e. a Symmetric Monoidal Category
where the category is a Poset) equipped with:
1. Notion of object: has a set of objects $Ob(P)$
2. Notion of element: for all $p1, p2 \in Ob(P)$ we have $P(p1,p2) \in
   \cat{V}$

\bigskip

Symmetric Monoidal Preorder (i.e. a Symmetric Monoidal Category where the
category is a Preorder; Poset is a Preorder with skeletality requirement) i.e. a
category where the morphism are "easy", i.e. between any two objects there
either is one or isn't one morphism. I.e. only one or none morphism.

\bigskip

Conditions for:
1. monoidal unit $I \leq_\cat{V} P(p,p)$
2. monoidal product $P(p1,p2) \otimes P(p2,p3) \leq_\cat{V} P(p1,p3)$

\bigskip

$P = (\cat{V}, \otimes, I)$ is a $\cat{V}$ -category, it means it
is enriched in itself. That also means it's a quantale, and that means it has
all joins. $\cat{V}$ is also a symmetric monoidal preorder with joins that
distribute over tensor. i.e. a quantale.
\href{https://youtu.be/4Uqgsy3zrjs?t=2620}{43:40}

# TODO find quantale def \href{https://youtu.be/4Uqgsy3zrjs?t=1126}{18:46}
# TODO is the 43:40 a proper quantale definition?

\bigskip

$\cat{V}$ -profunctor: $P\op \times Q \to \cat{V}$ where $\cat{V} = \{true,
false\}$ is a boolean; $\tickar$ is a profunctor, $\to$ is a normal functor; IOW
$\underscore \tickar \underscore$ packages up $\underscore \to \underscore$.

\bigskip

_Unpacking $\Phi(p, q)$_: is $p$ feasible, given $q$? \\
$p$ - resources provided \\
$q$ - res/ources required

\bigskip

_Meaning of opposite $\textsuperscript{op}$_: is there a path?"\\
Can you give me a dinner for two $p$? - Yes that's feasible. Actually I need
just a dinner for one $p'$: \\
if $p' \leq p$ and $q' \leq q$ then $\Phi(p, q) \leq \Phi(p', q')$

\bigskip

$\Bool$ -profunctor drawn in a form of collage. Like a Hasse diagram
for the whole profunctor.

\bigskip

_Profunctor_: a generalisation of functor where not everything from the domain
has to be included and two things may be spread out. See
\href{http://math.mit.edu/~dspivak/teaching/sp18/7Sketches.pdf}{page 122}. Also:
Every functor is a kind of a profunctor.

\bigskip

_Monotone map_: order preserving function $f: x \leq y$ then $f(x) \leq
f(y)$

\bigskip

A functor between $\Bool$ categories is a monotone map. So any
monotone map is a profunctor. $\NN$ are natural number with $\leq$ and
$+$ relations / operations. $\NN \times \NN \To{+} \NN$.

\bigskip

Whenever some says a "functor", "category", "profunctor" w/o mentioning the
$\cat{V}$ they always mean a $\SmSet$ -category or a
$\SmSet$ -(pro)functor. Note: $\SmSet$ is a monoidal category.

*** Profunctor composition

Composing $\Phi$ with $\Psi$ and asking if it is feasible means that we can find
some $q \in Q$, such that:

$$(\Phi;\Psi)(p,r) = \bigvee_{q \in Q} \Phi(p,q) \wedge \Psi(q,r)$$

where $\Phi$, $\Psi$ are boolean feasibilities and $\wedge$, $\bigvee$ are $AND$
and $OR$ in $\Bool$.

\bigskip

_Identity on $P$_:
$$id_{P}: P\op \times P \to \cat{V}$$ where
$\cat{V}$ is $\Bool$ $$id_{P}(p,p'): = P(p,p')$$

\bigskip

For any category that category is it's own profunctor.

\bigskip

\href{https://censi.science/}{Andrea Censi} passes around the pareto optimal
anti-chains

** Symmetric Monoidal Categories SMC

\bigskip

Preorder $(P, \leq)$; e.g. $1 \leq 2$; $P$ is the wires, $\leq$ is the
boxes/series

\bigskip

Monoid $(M, \otimes, e)$; i.e. string of processes $(1 + 2) + 3$ \\
$M$ is the boxes \\
$\otimes$ is the series of composition; \\
$f \otimes g$ - parallel "execution" of $f$ and $g$.

\bigskip

Generalizations of Monoid and Preorder. See
\href{https://youtu.be/92Xp1z9PwJM?t=270}{4:30}:
1. Monoidal Preorder $(P, \leq, \otimes, e)$: where $P$ is a set. We can put
   things in parallel (wires, boxes, parallel boxes)
2. Category $(\Ob(\cat{C}), \Mor(\cat{C}), \after, \id{})$: (wires, boxes,
   series)

\bigskip

Monoidal Category: special type of Monoidal Preoder and Category
$(-, parallel, -)$

\bigskip

Axioms - ways to ensure that Hasse diagrams have unambiguous interpretation
associativity.

\bigskip

_Symmetric Monoidal Category SMC_ $(\cat{C}, \otimes, I)$: \\
SMC is equipped with a symmetric monoidal structure (SMS). SMS consists of:
- Category $\cat{C}$
- Functor for monoidal product $\otimes: \cat{C} \times \cat{C}
  \to \cat{C}$
- Functor I: $\Cat{1} \to \cat{C}$ i.e. an object $I \in \Ob(\cat{C})$
- Well-behaved natural isomorphism - $\forall c, d, e \in \Ob(\cat{C})$:
  + Left unitor: $\lambda_c : I \otimes c \cong c$
  + Right unitor: $\rho_c : c \otimes I \cong c$
  + Associativity condition: $\alpha_{c,d,e} : (c \otimes d) \otimes e \cong c
    \otimes (d \otimes e)$
  + Symmetricity condition: swap map $\sigma_{c,d}: c \otimes d \cong d \otimes
    c$ such that $\sigma \after \sigma = \id{}$

\bigskip

_SMC examples_:
1. $(\SmSet, \times, \cat{1})$: underlying $\SmSet$ category is the category of
   all sets: objects are sets, morphisms are functions; monoidal product
   $\times$ is a product of sets and product of functions. See
   \href{https://youtu.be/92Xp1z9PwJM?t=1658}{27:38}.
2. $(\SmSet, \sqcup, \emptyset)$: $\sqcup$ is the coproduct of disjoint unional
   sets.
3. $(\cat{Vect_{k}}, \otimes, k)$: $k$ is a field; objects are vector spaces;
   monoidal product $\otimes$ i.e. monoidal structure comes from the tensor
   product of linear maps and vector spaces.
4. $(\Prof_{\cat{V}}, \times, \cat{1})$: category of profunctors; objects are
   $\cat{V}$ -categories for some symmetric monoidal preorder; morphisms are the
   profunctors; monoidal product $\times$ is product of $\cat{V}$ -categories.

** Categorification

Take a known thing and add structure to it. So that /properties/ become
/structures/. See
\href{http://math.mit.edu/~dspivak/teaching/sp18/7Sketches.pdf}{page 133}.

\bigskip

_Example_:
Categorification of $\NN$ using $\FinSet$ - a category of finite sets and
functions:
# - \printvalues
- replace every number with a set of that many elements.
- replace $+$ with disjoint union of sets $\sqcup$.
- replace equality with the structure of an isomorphism.

* Signal Flow Graphs: Props, Presentations and Proofs

\href{https://youtu.be/33yVpzPOLjM}{Chapter 5, lecture 1 (Spivak)},
\href{https://youtu.be/0tnqd29TY9w}{Chapter 5, lecture 2 (Fong)}

\bigskip

Signal Flow Graphs - used in amplifiers filter, cyber-physical systems (tightly
interacting physical and computational parts)

\bigskip

I.e. It makes sense over any $\Cat{Rig}$ which is basically a
$\Cat{Ring}: R[s, s\inv]$

\bigskip

_Prop_ $(\cat{C}, \otimes, I)$: Special kind of a strict symmetric
monoidal category SMC where the objects are "easy" such that:
 - $\Ob(\cat{C}) := \NN$
 - $I := 0$
 - $\forall m,n \in \Ob(\cat{C}) := \NN: m \otimes n := m + n$
I.e. $Prop$ is a SMC where objects just have some finite cardinality. They're
just numbers (i.e. lines) \\
Symmetric: when equivalent then also equal: $1 + 2 \cong 3 \implies 1 + 2 = 3$

\bigskip

Example:
$Prop Mat_\RR$ of matrices over a $\Cat{Rig}$ $\RR$; in this
case real numbers $\RR$. A $\Cat{Rig}$ is an algebraic object where
you can add and multiple things. I.e.
- $\Ob(Mat_\RR) := \NN$
- $Mat_\RR(m,n) := Mat_\RR(m,n)$ - can't distinguish between the
  notations.
Compose a tensor of two matrices: TODO

\bigskip

_Presented Prop_

\bigskip

_String Diagrams_ (Syntax and Semantics, Soundness and Completeness)

\bigskip

\href{https://youtu.be/33yVpzPOLjM?t=433}{7:13} String diagrams are syntax for
something, Semantics is the math formula with integrals

\bigskip

Soundness: if you can prove that one diagram equals to another using String
diagram manipulations

\bigskip

_Prop Functor_ $F: \cat{C} \to \cat{D}$:
- a functor between $Props$, i.e. categories with the set natural numbers $\NN$
  as their objects. It is an identity-on-objects
- preserves composition as a functor should and also it preserves the tensor
  product

\bigskip

_Prop Signature_ $\Sigma$
Set $G$ with ...

\bigskip

_Port Graph_

\bigskip

_Free structure_: free from unnecessary constraints. See
$\Cat{Free}(G)$

\bigskip

Notion of adjuction ...

\bigskip

??? Underlying set of Monoid

\bigskip

strict Symmetric Monoidal Category SMC:
- strict - unitors, associators are identities; i.e strict means that the
  objects form a proper monoid

\bigskip

props are categories$!

\bigskip

_Transitive closure_ $R^+$ of a binary relation $R$: \\
Example: $R = \{(1,2),(2,3)\}$ then $R^+ = \{(1,2),(2,3),(1,3)\}$ i.e. extend
the $R$ by every possible composition.

\bigskip

_Prop Signature_ $\Sigma$
Set $G$ of things and two functions $s$, $t$ to natural numbers $\NN$.

\bigskip

TODO Full Functor from C to D
TODO Matrix Kernel

* Electric circuits: Hypergraph categories and operads
* Logic of behavior: Sheaves, toposes, and internal languages

\href{https://youtu.be/Qp6b-XbPog0}{Chapter 7, lecture 1 (Spivak)}

# \vspace{5mm}
\bigskip

_Topos_ is:
- is a type of a category being able to replace the Set Theory

- is a place "where you can do logic" i.e. a world where mathematical statements
  can be interpreted

- provides among other things a notion of a Subset

- comes equiped with an "internal language", i.e. graphs, groups, topological
  spaces (changing over time) can be defined in any topos

- every topos has a notion of truht value and truth values are much more
  expressive than they are in the topos of sets

- truth can vary over time and space: e.g. predicate "it rains" is not true
  everywhere and anytime. In the topos of timespace truth values say when and
  where "it rains" is or is not true

- in temporal logic we have a logic of "when" - when something is true

- Set topos / topos of sets is a topos of single point

\bigskip

_Topos properties_:
1. has limits and colimits

2. every morphishm has an epi-mono factorization, i.e. it can be seen as a
   surjection (onto) followed by an injection (one-to-one)

3. is cartesian closed
- cartesian: has product $A \times B$ (conjunction) for any pair of objects $A$,
  $B$

- closed: has exponential $B^A$ (functions $A \to B$) for any pair of
  objects $A$, $B$

- 0-th power of an object: has a terminal object \cdot (for all objects there
  exists a unique map $A \to \cdot$)

4. has a subobject classifier \Omega - contains the "core" of topos logic

** Subobject Classifier: Object \Omega with Mononorphisms \(\cat{1} \to \Omega\)

$\cat{E}$ is a category with:
- Objects: $\Ob(\cat{E}) = \{\Omega, X, Y, 1\}$
- Morphisms: $\Mor(\cat{E}) = \{!, m, \corners{m}, true\}$ where $true$ is a
  monomorphism $1 \mono{} \Omega$ (mono = mapping distinct $x$'s to distinct
  $y$'s), in $\SmSet$ typically mapping $1 \mapsto \top$ where $\Omega = \{\top,
  \bot\}$ (read "Top, Bottom").

\bigskip

TODO is it possible to have more $\Ob(\cat{E})$ and/or $\Mor(\cat{E})$?

** Sheaf (Garbe, Faisceau, zväzok): Functor \(F: \cat{C} \to \SmSet\)
tool for tracking locally defined data

*** Presheaf: Functor \(F: \cat{C}\op \to \SmSet\)
